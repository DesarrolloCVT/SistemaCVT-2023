//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CVT_MermasRecepcion.WSCVTTs {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSCVTTs.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        CVT_MermasRecepcion.WSCVTTs.CompositeType GetDataUsingDataContract(CVT_MermasRecepcion.WSCVTTs.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<CVT_MermasRecepcion.WSCVTTs.CompositeType> GetDataUsingDataContractAsync(CVT_MermasRecepcion.WSCVTTs.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataObtieneDatosUsuario", ReplyAction="http://tempuri.org/IService/GetDataObtieneDatosUsuarioResponse")]
        DBMermasRecepcion.CVT_Usuarios[] GetDataObtieneDatosUsuario(int IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataObtieneDatosUsuario", ReplyAction="http://tempuri.org/IService/GetDataObtieneDatosUsuarioResponse")]
        System.Threading.Tasks.Task<DBMermasRecepcion.CVT_Usuarios[]> GetDataObtieneDatosUsuarioAsync(int IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataVerificaUser", ReplyAction="http://tempuri.org/IService/GetDataVerificaUserResponse")]
        bool GetDataVerificaUser(string nomusu, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataVerificaUser", ReplyAction="http://tempuri.org/IService/GetDataVerificaUserResponse")]
        System.Threading.Tasks.Task<bool> GetDataVerificaUserAsync(string nomusu, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSuma", ReplyAction="http://tempuri.org/IService/GetSumaResponse")]
        int GetSuma(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSuma", ReplyAction="http://tempuri.org/IService/GetSumaResponse")]
        System.Threading.Tasks.Task<int> GetSumaAsync(int num1, int num2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : CVT_MermasRecepcion.WSCVTTs.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<CVT_MermasRecepcion.WSCVTTs.IService>, CVT_MermasRecepcion.WSCVTTs.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public CVT_MermasRecepcion.WSCVTTs.CompositeType GetDataUsingDataContract(CVT_MermasRecepcion.WSCVTTs.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<CVT_MermasRecepcion.WSCVTTs.CompositeType> GetDataUsingDataContractAsync(CVT_MermasRecepcion.WSCVTTs.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public DBMermasRecepcion.CVT_Usuarios[] GetDataObtieneDatosUsuario(int IdUsuario) {
            return base.Channel.GetDataObtieneDatosUsuario(IdUsuario);
        }
        
        public System.Threading.Tasks.Task<DBMermasRecepcion.CVT_Usuarios[]> GetDataObtieneDatosUsuarioAsync(int IdUsuario) {
            return base.Channel.GetDataObtieneDatosUsuarioAsync(IdUsuario);
        }
        
        public bool GetDataVerificaUser(string nomusu, string contrasena) {
            return base.Channel.GetDataVerificaUser(nomusu, contrasena);
        }
        
        public System.Threading.Tasks.Task<bool> GetDataVerificaUserAsync(string nomusu, string contrasena) {
            return base.Channel.GetDataVerificaUserAsync(nomusu, contrasena);
        }
        
        public int GetSuma(int num1, int num2) {
            return base.Channel.GetSuma(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> GetSumaAsync(int num1, int num2) {
            return base.Channel.GetSumaAsync(num1, num2);
        }
    }
}
